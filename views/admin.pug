extends layout

block content
    script.
        let dataFromServer = !{values};
        let volunteers = dataFromServer[0].volunteers;
        let googleShetExportData = {};
        let rowIndex = 0;
        let columnIndex = 0;
        window.onload = () => {
          const dataTable = document.getElementById("dataTable");
          volunteers.forEach(function(volunteer) {
            let row = dataTable.insertRow(rowIndex);
            let cell = row.insertCell(columnIndex);
            cell.innerText = volunteer.email;
            // Object.keys(volunteer).forEach(function(childPoint) {
            //   columnIndex++;
            //   row.insertCell(childPoint);
            // });
            rowIndex++;
            columnIndex = 0;
          });
        }

    input(type='hidden', name='_csrf', value=_csrf)
    div.pb-2.mt-2.mb-4.border-bottom
        h3 Administration

        form(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            div.flex-column
                button.col-md-6.btn.btn-primary(type='submit') Get Data From Server
                button.col-md-6.btn.btn-primary(onclick='makeApiCall') Export to Google Sheets

        //h4 Values in Google Sheets
        h4
            table(id="dataTable" style='width:100%', border='1')

        script.
            function makeApiCall() {
                let spreadsheetBody = googleShetExportData;

                let request = gapi.client.sheets.spreadsheets.create({}, spreadsheetBody);
                request.then(function(response) {
                    console.log(response.result);
                }, function(reason) {
                    console.error('error: ' + reason.result.error.message);
                });
            }

            function initClient() {
                const API_KEY = 'AIzaSyBECUuylhYH8XkXj7LaZ1L8vy0V2goMI_k';
                const CLIENT_ID = '799459514316-fig3md99h4p2u6k9il13sfsr0qc2c7hj.apps.googleusercontent.com';

                // TODO: Authorize using one of the following scopes:
                //   'https://www.googleapis.com/auth/drive'
                //   'https://www.googleapis.com/auth/drive.file'
                //   'https://www.googleapis.com/auth/spreadsheets'
                const SCOPE = 'https://www.googleapis.com/auth/spreadsheets';

                gapi.client.init({
                'apiKey': API_KEY,
                'clientId': CLIENT_ID,
                'scope': SCOPE,
                'discoveryDocs': ['https://sheets.googleapis.com/$discovery/rest?version=v4'],
                }).then(function() {
                    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSignInStatus);
                    updateSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
                });
            }

            function handleClientLoad() {
                gapi.load('client:auth2', initClient);
            }

            function updateSignInStatus(isSignedIn) {
                if (isSignedIn) {
                    makeApiCall();
                }
            }

            function handleSignInClick(event) {
                gapi.auth2.getAuthInstance().signIn();
            }

            function handleSignOutClick(event) {
                gapi.auth2.getAuthInstance().signOut();
            }

        script(async defer src="https://apis.google.com/js/api.js" onload="this.onload=function(){};handleClientLoad()" onreadystatechange="if (this.readyState === 'complete') this.onload()")
        button(id="signin-button" onclick="handleSignInClick()") Sign in
        button(id="signout-button" onclick="handleSignOutClick()") Sign out
